def checkTasks = []
gradle.rootProject.allprojects { project ->
    checkTasks.addAll(project.tasks.findAll { it.name == 'build' })
}

tasks.addRule('Pattern: deploy<Space>: Deploys the project to a Cloud Foundry space.') { taskName ->
    if (taskName.startsWith('deploy')) {
        def space = taskName - 'deploy'
        def cfPath = System.getProperty("cf.path")?:''
        def cfUser = System.getProperty("cf.user")?:''
        def cfPass = System.getProperty("cf.path")?:''
        if (space.length() == 0) throw new GradleException('Usage: deploy<Space>')
        project.task([type: Exec, dependsOn: build], taskName) {
            commandLine './scripts/deploy.sh', space.toLowerCase(), cfPath, cfUser, cfPass

            // ensure the indexer is always deployed after the site, because if the
            // site fails to deploy, we don't want the indexer to deploy at all
            if (project.name == 'sagan-indexer') {
                mustRunAfter project(':sagan-site').tasks[taskName]
            }
            mustRunAfter checkTasks
        }
    }
}
