import org.gradle.api.tasks.testing.Test

sourceSets { na ->
    it
}

task it(type: Test) {
    description = "Runs the integration tests."
    mustRunAfter test

    testClassesDir = sourceSets.it.output.classesDir
    classpath = sourceSets.it.runtimeClasspath

    maxHeapSize = '1024m'

    // ensure we don't overwrite default report directories used by 'test' task
    reports.html.destination = "${project.buildDir}/reports/it"
    reports.junitXml.destination = "${project.buildDir}/it-results"
}

check.dependsOn it

dependencies {
    itCompile sourceSets.main.output
    itCompile sourceSets.test.output
    itCompile configurations.compile
    itCompile configurations.testCompile
    itRuntime configurations.runtime
    itRuntime configurations.testRuntime
}

gradle.projectsEvaluated {
    def unitTestTasks = []
    gradle.rootProject.allprojects { project ->
        unitTestTasks.addAll(project.tasks.findAll { it.name == 'test' })
    }
    unitTestTasks.each { unitTestTask ->
        project.tasks['it'].mustRunAfter unitTestTask
    }
}