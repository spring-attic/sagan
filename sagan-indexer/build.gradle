
springBoot.mainClass = 'sagan.app.indexer.ApplicationConfiguration'

dependencies {
    compile project(':sagan-common')

    compile "org.springframework.boot:spring-boot-starter-web"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-security"

    // for use in CrawlerService
    compile "org.apache.httpcomponents:httpclient"
    compile('com.soulgalore:crawler:1.5.1') {
        exclude(module: 'guice')
        exclude(module: 'commons-logging')
    }

    // for use in mocking http interactions
    testCompile "org.springframework:spring-test"

    // pick up common test utility classes
    testCompile project(':sagan-common').sourceSets.testUtil.output
}

task copyStaticTemplates(type: Copy, dependsOn: project(':sagan-site').processResources) {
    description = "Copies static html templates from :sagan-site in order to index them at runtime."

    from project(':sagan-site').sourceSets.main.output.resourcesDir
    into sourceSets.main.output.resourcesDir
    include "templates/pages/**/*"
}
processResources.dependsOn copyStaticTemplates

// Ensure that site tasks have execution priority over indexer tasks, as it is
// desirable to identify problems with the site as quickly as possible
gradle.projectsEvaluated {
    tasks.each { indexerTask ->
        def siteTask = project(':sagan-site').tasks.findByPath(indexerTask.name)
        if (siteTask != null) {
            indexerTask.mustRunAfter siteTask
        }
    }
}

