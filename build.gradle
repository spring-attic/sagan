def vJavaLang = '1.7'
def javaProjects = [ project(':sagan-site'), project(':sagan-indexer'), project(':sagan-common') ]
def bootProjects = javaProjects - project(':sagan-common')
def gradleDir = "${rootProject.rootDir}/gradle"

buildscript {
    ext.springRepo = 'http://repo.spring.io/libs-milestone'

    repositories {
        maven { url springRepo }
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:1.0.0.RC3"
        classpath 'org.cloudfoundry:cf-gradle-plugin:1.0.2' // see deploy.gradle
    }
}

configure(allprojects) {
    apply plugin: 'eclipse'
    apply plugin: 'idea'
}

configure(rootProject) {
    apply from: 'gradle/gitMetadata.gradle'

    idea.project {
        languageLevel = vJavaLang
        ipr {
            withXml { provider ->
                def mapping = provider.node.component.find { it.@name == 'VcsDirectoryMappings' }.mapping
                mapping.@vcs = 'Git'
                mapping.@directory = '$PROJECT_DIR$'
            }
        }
    }
}

configure(javaProjects) {
    apply plugin: 'java'

    targetCompatibility = vJavaLang
    sourceCompatibility = vJavaLang

    repositories {
        maven { url springRepo }
    }

    dependencies {
        compile 'org.slf4j:slf4j-api'
        testCompile 'junit:junit'
        testCompile 'org.hamcrest:hamcrest-library'
        testCompile 'org.mockito:mockito-core'
    }

}

configure(bootProjects) {
    apply plugin: 'spring-boot'
    apply from: "$gradleDir/integTest.gradle"
    apply from: "$gradleDir/deploy.gradle"
    apply from: "$gradleDir/writeGitPropertiesFile.gradle"

    springBoot.backupSource = false
}

