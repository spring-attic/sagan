buildscript {
    ext.vSpringBoot = '0.5.0.M7'
    ext.vSpringCore = '4.0.0.RELEASE'
    ext.vSpringSec = '3.2.0.RC2'
    ext.vHttpClient = '4.3'
    ext.vJunit = '4.11'

    repositories {
        maven { url 'http://repo.spring.io/libs-milestone' }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${vSpringBoot}"
        classpath 'org.cloudfoundry:cf-gradle-plugin:1.0.2'
    }
}

apply plugin: 'eclipse'
apply plugin: 'idea'
idea.project {
    languageLevel = '1.7'
    ipr {
        withXml { provider ->
            def mapping = provider.node.component.find { it.@name == 'VcsDirectoryMappings' }.mapping
            mapping.@vcs = 'Git'
            mapping.@directory = '$PROJECT_DIR$'
        }
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'eclipse'

    targetCompatibility = 1.7
    sourceCompatibility = 1.7

    repositories {
        jcenter()
        maven { url 'http://repo.spring.io/libs-milestone' }
    }

    dependencies {
        compile 'org.slf4j:slf4j-api:1.7.5'
        testCompile "junit:junit:${vJunit}"
        testCompile 'org.hamcrest:hamcrest-library:1.3'
        testCompile 'org.mockito:mockito-core:1.9.5'
    }

    configurations.all {
        resolutionStrategy {
            //failOnVersionConflict()

            eachDependency { DependencyResolveDetails details ->
                if (details.requested.group == 'org.springframework') {
                    details.useVersion "${vSpringCore}"
                }
                if (details.requested.group == "org.apache.httpcomponents") {
                    if (details.requested.name != "httpasyncclient") {
                        details.useVersion "${vHttpClient}"
                    }
                }
            }
        }
    }
}

